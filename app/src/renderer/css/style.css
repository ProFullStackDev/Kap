/*
  Kap.app main styling
  ----
  Uses eightpoint (github.com/wulkano/eightpoint as a reset).
  ( Õ°¬∞ Õú ñ Õ°¬∞)
*/

@import 'eightpoint/dist/eight.min';

/* Variables */
$background-primary: #FFFFFF;
$background-secondary: #ECECEC;
$primary-text-color: #585858;
$secondary-text-color: #9C9C9C;
$divider-color: rgba(0, 0, 0, 0.1);
$default-font-size: 1.4rem;
$box-shadow-inputs: 0px 1px 1px 0px rgba(0,0,0,0.20), 0px 0px 0px 1px rgba(0,0,0,0.10);
$red: #FF6159;
$blue: #3B99FC;
$green: #28CA42;
$window-border-radius: 5px;

.txt {
  -webkit-user-select: none !important;
  cursor: default !important;
}

/* Set base colour and font stack */
body {
  color: $secondary-text-color;
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue";
  overflow: hidden;
}

select {
  width: 100%;
  -webkit-appearance: none;
  height: 24px;
  padding-left: 8px;
  padding-right: 8px;
  position: relative;
  background: transparent;
  border: none;
  top: -3px;
}

.select-element {
  position: relative;
  height: 24px;
  width: 100%;
  border-radius: 3px;
  background-color: #414141;
  box-shadow: 0px 1px 2px 0px rgba(0,0,0,0.20), 0px 0px 0px 1px rgba(0,0,0,0.10), inset 0px 1px 0px 0px rgba(255,255,255,0.05);
  color: white;

  &:after {
    display: block;
    content: '\25be';
    text-align: center;
    font-size: 1.2rem;
    pointer-events: none;
    color: #8C8C8C;
    width: 16px;
    height: 24px;
    top: 0;
    right: 4px;
    position: absolute;
  }

  select { color: white; }

  &.is-light {
    background: white;
    background-position: 0 0, 100% 0;
    background-repeat: no-repeat;
    background-size: 1px 100%;
    background-color: #F9F9F9;
    box-shadow: 0 1px 1px 0 rgba(0,0,0,0.2), 0 0 0 1px rgba(0,0,0,0.1), inset 0 1px 0 0 #FFFFFF, inset 0 1px rgba(255, 255, 255, 1);
    select { color: $primary-text-color; }
  }
}

/* Helper Classes */
.btn { cursor: pointer }
.circle { border-radius: 50%; }
.container {
  display: flex;
  padding-left: 1.6rem;
  padding-right: 1.6rem;
}
.hidden { display: none !important; }
.webkit-drag {
  -webkit-app-region: drag;
  cursor: -webkit-grab;
}
.horizontal-section { display: flex; }

/* Tray Arrow */
.tray-arrow {
  margin: auto;
  width: 0;
  height: 0;
  border-right: 1rem solid transparent;
  border-bottom: 1rem solid $background-primary;
  border-left: 1rem solid transparent;
  transition: all .3s ease;
}

/* Window Title Bar */
.title-bar {
  @extend .webkit-drag;
  width: 100%;
  height: 2.8rem;
  text-align: center;
  background-color: $background-primary;
  position: relative;

  &.has-update-notification {
    height: 5.6rem;
    background-color: $green;
  }

  &.has-update-notification .window__title {
    color: white;
  }
}

.title-bar__controls {
  position: absolute;
  left: 8px;
  transition: all .3s ease;
  svg {
    margin-right: 3.5px;
  }
  &.invisible {
    opacity: 0;
  }
}

.title-bar__controls .hide-window, .title-bar__controls .minimize-window {
  &, & * {
    cursor: default !important; /* there's hrefs on the SVG üòí */
  }

  /*&:hover g g, &:hover g path { display: inherit; }*/
}

.title-bar__controls:hover .hide-window g g, .title-bar__controls:hover .minimize-window g g, .title-bar__controls:hover .hide-window g path, .title-bar__controls:hover .minimize-window g path, {
  display: inherit;
}

.hide-window:active g use { fill: #BF4942; }

.minimize-window:active g use { fill: #BF8E22; }

.window__title {
  color: $primary-text-color;
  font-size: $default-font-size;
  line-height: 2.8rem;
  cursor: -wekit-grab;
}

/* Content Wrapper */
.content {
  background-color: $background-secondary;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  overflow: hidden;
  border-radius: 5px;
}

/*
  Components
  ----
*/

/* Inputs */
input, .input {
  border-radius: 3px;
  background: white;
  border: 0;
  height: 2.4rem;
  padding: 0 0.8rem;
  background-color: #2D2D2D;
  color: white;
  border: 1px solid #545454;

  &:focus { border-color: #3B99FC; }
}

button {
  height: 2.4rem;
}

/* Button Groups */
.button-group {
  border: none;
  border-radius: 3px;
  width: 6.4rem;
  height: 2.4rem;
  display: flex;
  justify-content: space-around;
  background-color: #414141;
  box-shadow: 0px 1px 2px 0px rgba(0,0,0,0.20), 0px 0px 0px 1px rgba(0,0,0,0.10), inset 0px 1px 0px 0px rgba(255,255,255,0.05);

  button {
    flex: 1 0 50%;
    background: transparent;
    border: 0;
    height: 100%;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;

    &:not(:last-child) { border-right: 1px solid rgba(0, 0, 0, 0.1); }
  }

  svg {
    @extend .btn;
    height: 2.4rem;
    width: 2.4rem;
    fill: #919191;
    transition: fill 0.12s ease-in-out;

    &:hover:not(:active):not(.active) { fill: #AEAEAE; }
    &:active, &.active { fill: $blue; }
    &.disabled { pointer-events: none; }
  }

  &.is-light {
    background: #F9F9F9;
    box-shadow: $box-shadow-inputs, 0 1px rgba(255, 255, 255, 1);

    svg { fill: #8C8C8C; }
  }
}



/* Kap Header */
.kap-header {
  @extend .webkit-drag;
  display: flex;
  background-color: $background-primary;
  width: 100%;
  justify-content: center;
  align-items: center;
  height: 12.4rem;

  &__text {
    font-size: 1.2rem;
    cursor: -webkit-grab;

    &:first-child {
      text-align: right;
      flex: 1;
    }

    &:last-child {
      text-align: left;
      flex: 1;
    }
  }
}

.record {
  @extend .btn;
  @extend .circle;
  display: flex;
  border: 2px solid $red;
  width: 6.4rem;
  height: 6.4rem;
  margin: 0 2rem;
  justify-content: center;
  align-items: center;
  transition: background-color .12s ease-in-out;

  &.filled { background-color: $red; }

  svg {
    width: 2.4rem;
    height: 2.4rem;
    transition: background .12s ease-in-out;
  }
}

/*
  Controls Section
  ----

  Controls shown in the main Kap window.

*/
.controls {
  width: 100%;
  color: white;

  /* Toggle of controls section */
  &-toggle {
    display: flex;
    height: 3.2rem;
    width: 100%;
    align-items: center;
    font-size: 1.4rem;
    cursor: pointer;
    background: #2D2D2D;
    color: white;

    /* Text inside the toggle */
    &__title {
      cursor: pointer;
      margin-left: 1rem;
    }

    /* Directional transform of arrow in toggle */
    .triangle.up { transform: rotate(-180deg); }
  }

  /* App options menu, to the right of the toggle */
  &-options {
    margin-left: auto;
    padding: .25em;
    width: 2.2rem;
    height: 2.2rem;
    fill: #8C8C8C;
    cursor: pointer;

    &:hover { fill: #4D4D4D; }
  }


  /* Container for all controls after toggle has been clicked */
  &-content {
    border-top: 1px solid #1B1B1B;
    display: flex;
    flex-direction: column;
  }

  /* Sections within the control content */
  &-section {
    padding-top: 1.6rem;
    padding-bottom: 1.6rem;
    display: flex;
    flex-direction: column;
    width: 100%;
    background: #222222;

    /* Add a border-top to each following element of the same class */
    & + .controls-section { border-top: 1px solid #1B1B1B; }

    &__title {
      color: $primary-text-color;
      font-size: 1.4rem;
      letter-spacing: -.010rem;
      line-height: normal;
      margin-bottom: 14px;
      color: white;
    }

    &__row {
      display: flex;
      width: 100%;

      & + .controls-section__row { margin-top: 8px; }
    }
  }
}


/* Aspect Ratio Controls */
.aspect-ratio {
  justify-content: space-between;
  align-items: flex-end;
}

.aspect-ratio__input {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.aspect-ratio__input label {
  font-size: 1rem;
  line-height: normal;
  display: block;
  margin-bottom: 0.5em;
  color: #D7D7D7;
}

.aspect-ratio__input input {
  width: 101px;
}

.aspect-ratio__options {
  border-radius: 3px;
  width: 64px;
  height: 2.4rem;
  align-items: flex-start;
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }

  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}

.shake {
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

section.progress {
  @extend .webkit-drag;
  background-color: $background-primary;
  width: 100%;
  align-items: center;
  display: flex;
  justify-content: center;
  height: 12.6rem;
  padding-bottom: 2.8rem; /* to compensate the tittle bar */
}

.progress-bar-label {
  position: absolute;
  font-size: $default-font-size;
  bottom: 4.75rem;
}

.progress-bar {
  height: 2rem; /* (Ôæâ‡≤†–¥‡≤†)ÔæâÔ∏µ‚îª‚îÅ‚îª */
}

.update-notification {
  @extend .webkit-drag;
  display: flex;
  background-color: #28ca42;
  width: 100%;
  height: 2.75rem;
  color: #fff!important;
  flex-direction: column;

  & span {
    font-size: 1.2rem;
  }

  & ul {
    display: flex;
    position: absolute;
    right: .5rem;
    margin-left: auto;

    & li svg {
      padding: .25em;
      width: 2.4rem;
      height: 2.4rem;
    }
  }
}
